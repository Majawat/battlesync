services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://battlesync:battlesync@db:5432/battlesync
      - JWT_SECRET=your-development-jwt-secret-change-in-production
      - CORS_ORIGIN=http://localhost:3002
      - PORT=3001
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      - db
    command: npm run dev

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3002:3000"
    environment:
      - NODE_ENV=development
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - app
    command: npm run dev

  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=battlesync
      - POSTGRES_USER=battlesync
      - POSTGRES_PASSWORD=battlesync
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql

  # Optional Redis for caching (uncomment when needed)
  # redis:
  #   image: redis:7-alpine
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data

volumes:
  postgres_data:
  # redis_data: